n = 4
keys = [10, 20, 30, 40]
p = [0.1, 0.2, 0.4, 0.3]
q = [0.05, 0.1, 0.05, 0.05, 0.1]

e = [[0 for _ in range(n + 1)] for _ in range(n + 1)]
w = [[0 for _ in range(n + 1)] for _ in range(n + 1)]
root = [[0 for _ in range(n + 1)] for _ in range(n + 1)]

for i in range(n + 1):
    e[i][i] = q[i]
    w[i][i] = q[i]

for l in range(1, n + 1):
    for i in range(n - l + 1):
        j = i + l
        e[i][j] = float('inf')
        w[i][j] = w[i][j-1] + p[j-1] + q[j]
        for r in range(i + 1, j + 1):
            cost = e[i][r-1] + e[r][j] + w[i][j]
            if cost < e[i][j]:
                e[i][j] = cost
                root[i][j] = r

print("Minimum expected cost of OBST =", round(e[0][n], 1))